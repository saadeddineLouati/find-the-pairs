{"ast":null,"code":"var _jsxFileName = \"E:\\\\saad\\\\c4t-frontend-test\\\\find-the-pairs\\\\components\\\\Grid.jsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport styled, { keyframes } from \"styled-components\";\nimport { LIMIT_CARDS, SHUFFLE, DUPLICATE_CARDS, RESET_CARDS, FLIP_ALL_CARDS, FLIP_CARD } from \"../redux/constants/action-types\";\nimport { motion } from \"framer-motion\";\nimport { flipCard } from \"../redux/actions/index\";\nimport { Modal } from \"antd\";\n\nfunction Grid(props) {\n  useEffect(() => {\n    props.resetCards();\n    props.shuffleCards();\n    props.limitCards();\n    props.duplicateCards();\n    props.shuffleCards();\n    setTimeout(() => {\n      props.flipAllCards();\n    }, 5000);\n  }, [props.numberOfPairs]);\n  useEffect(() => {\n    if (props.matching) {\n      setTimeout(() => {\n        props.flipAllCards();\n      }, 1000);\n    }\n  }, [props.matching]);\n  useEffect(() => {\n    if (props.numberOfFoundPairs === props.numberOfPairs) {\n      setTimeout(() => {\n        // alert(\"YOU WIN \");\n        // setGameOver(true)\n        Modal.success({\n          content: 'Congrats, you WIN'\n        });\n      }, 500);\n    }\n  }, [props.numberOfFoundPairs]);\n  return (//   grid Item\n    __jsx(GridContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }\n    }, props.cards.map((el, index) => {\n      // matching  and isActive\n      // matching and notActive\n      if (el.isActive || el.timed) {\n        return __jsx(ImageWrapper, {\n          color: \"#bbb\",\n          width: props.width,\n          key: \"div\" + index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }\n        }, __jsx(\"img\", {\n          key: el.src + index,\n          \"data-index\": el.index,\n          src: el.src,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }\n        }));\n      } else if (el.match) {\n        return __jsx(ImageWrapper, {\n          color: \"transparent\",\n          width: props.width,\n          key: \"div\" + index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }\n        });\n      } else {\n        return __jsx(ImageWrapper2, {\n          color: \"#2094fc\",\n          width: props.width,\n          key: \"div\" + index,\n          onClick: () => {\n            if (!props.matching) {\n              props.flipCard(el.index);\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }\n        }, __jsx(\"h1\", {\n          style: {\n            color: 'white',\n            fontSize: '49px',\n            padding: '15%'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }\n        }, \"?\"));\n      }\n    }))\n  );\n}\n\nconst mapStateToProps = state => ({\n  numberOfPairs: state.numberOfPairs,\n  numberOfAttempts: state.numberOfAttempts,\n  numberOfFoundPairs: state.numberOfFoundPairs,\n  cards: state.cards,\n  clickCounter: state.clickCounter,\n  matching: state.matching,\n  width: state.width,\n  matching: state.matching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  shuffleCards: () => dispatch({\n    type: SHUFFLE\n  }),\n  limitCards: () => dispatch({\n    type: LIMIT_CARDS\n  }),\n  duplicateCards: () => dispatch({\n    type: DUPLICATE_CARDS\n  }),\n  resetCards: () => dispatch({\n    type: RESET_CARDS\n  }),\n  flipAllCards: () => dispatch({\n    type: FLIP_ALL_CARDS\n  }),\n  flipCard: index => dispatch(flipCard(index))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Grid); // ---------------------------------\n\nconst GridContainer = styled.div.withConfig({\n  displayName: \"Grid__GridContainer\",\n  componentId: \"dn76fs-0\"\n})([\"width:641px;height:100vh;margin:0 auto;text-align:center;display:table-cell;\"]);\nconst fade = keyframes([\"from{opacity:0;}to{opacity:1;}\"]);\nconst flipHorizontalBottom = keyframes([\"from{transform:rotateY(0);}to{transform:rotateY(-360deg);}\"]);\nconst ImageWrapper = styled.div.withConfig({\n  displayName: \"Grid__ImageWrapper\",\n  componentId: \"dn76fs-1\"\n})([\"display:inline-block;margin-right:5px;margin-top:5px;width:\", \";height:\", \";background-color:\", \";filter:drop-shadow(0px 0px 1px grey);border-radius:3px;overflow:hidden;animation:\", \" 0.7s linear;img,.blank{width:\", \";height:\", \";padding:1px;}\"], props => props.width + \"px\", props => props.width + \"px\", props => props.color, fade, props => props.width + \"px\", props => props.width + \"px\");\nconst ImageWrapper2 = styled.div.withConfig({\n  displayName: \"Grid__ImageWrapper2\",\n  componentId: \"dn76fs-2\"\n})([\"display:inline-block;margin-right:5px;margin-top:5px;width:\", \";height:\", \";background-color:\", \";filter:drop-shadow(0px 0px 1px grey);border-radius:3px;overflow:hidden;-webkit-animation:\", \" 0.7s cubic-bezier(0.455,0.030,0.515,0.955) both;animation:\", \" 0.7s cubic-bezier(0.455,0.030,0.515,0.955) both;img,.blank{width:\", \";height:\", \";padding:1px;}\"], props => props.width + \"px\", props => props.width + \"px\", props => props.color, flipHorizontalBottom, flipHorizontalBottom, props => props.width + \"px\", props => props.width + \"px\");\nImageWrapper.defaultProps = {\n  width: 125\n};\nImageWrapper2.defaultProps = {\n  width: 125\n};","map":{"version":3,"sources":["E:/saad/c4t-frontend-test/find-the-pairs/components/Grid.jsx"],"names":["React","useEffect","useState","connect","styled","keyframes","LIMIT_CARDS","SHUFFLE","DUPLICATE_CARDS","RESET_CARDS","FLIP_ALL_CARDS","FLIP_CARD","motion","flipCard","Modal","Grid","props","resetCards","shuffleCards","limitCards","duplicateCards","setTimeout","flipAllCards","numberOfPairs","matching","numberOfFoundPairs","success","content","cards","map","el","index","isActive","timed","width","src","match","color","fontSize","padding","mapStateToProps","state","numberOfAttempts","clickCounter","mapDispatchToProps","dispatch","type","GridContainer","div","fade","flipHorizontalBottom","ImageWrapper","ImageWrapper2","defaultProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport {\r\n  LIMIT_CARDS,\r\n  SHUFFLE,\r\n  DUPLICATE_CARDS,\r\n  RESET_CARDS,\r\n  FLIP_ALL_CARDS,\r\n  FLIP_CARD,\r\n} from \"../redux/constants/action-types\";\r\nimport { motion } from \"framer-motion\"\r\n\r\nimport { flipCard } from \"../redux/actions/index\";\r\nimport { Modal } from \"antd\";\r\n\r\nfunction Grid(props) {\r\n  useEffect(() => {\r\n    props.resetCards();\r\n    props.shuffleCards();\r\n    props.limitCards();\r\n    props.duplicateCards();\r\n    props.shuffleCards();\r\n\r\n    setTimeout(() => {\r\n      props.flipAllCards();\r\n    }, 5000);\r\n  }, [props.numberOfPairs]);\r\n\r\n  useEffect(() => {\r\n    if (props.matching) {\r\n      setTimeout(() => {\r\n        props.flipAllCards();\r\n      }, 1000);\r\n    }\r\n  }, [props.matching]);\r\n\r\n  useEffect(() => {\r\n    if (props.numberOfFoundPairs === props.numberOfPairs) {\r\n      setTimeout(() => {\r\n        // alert(\"YOU WIN \");\r\n        // setGameOver(true)\r\n        Modal.success({\r\n          content: 'Congrats, you WIN',\r\n        });\r\n      }, 500);\r\n    }\r\n  }, [props.numberOfFoundPairs]);\r\n\r\n  return (\r\n    //   grid Item\r\n    <GridContainer>\r\n      {props.cards.map((el, index) => {\r\n        // matching  and isActive\r\n        // matching and notActive\r\n        if (el.isActive || el.timed) {\r\n          return (\r\n            <ImageWrapper color=\"#bbb\" width={props.width} key={\"div\" + index}>\r\n              <img key={el.src + index} data-index={el.index} src={el.src} />\r\n            </ImageWrapper>\r\n          );\r\n        } else if (el.match) {\r\n          return (\r\n            <ImageWrapper\r\n              color=\"transparent\"\r\n              width={props.width}\r\n              key={\"div\" + index}\r\n            >\r\n\r\n            </ImageWrapper>\r\n          );\r\n        } else {\r\n          return (\r\n            <ImageWrapper2\r\n              color=\"#2094fc\"\r\n              width={props.width}\r\n              key={\"div\" + index}\r\n              onClick={() => {\r\n                if (!props.matching) {\r\n                  props.flipCard(el.index);\r\n                }\r\n              }}\r\n            >\r\n              <h1 style={{\r\n                color: 'white',\r\n                fontSize: '49px',\r\n                padding: '15%'\r\n              }}>?</h1>\r\n            </ImageWrapper2>\r\n          );\r\n        }\r\n      })}\r\n    </GridContainer>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  numberOfPairs: state.numberOfPairs,\r\n  numberOfAttempts: state.numberOfAttempts,\r\n  numberOfFoundPairs: state.numberOfFoundPairs,\r\n  cards: state.cards,\r\n  clickCounter: state.clickCounter,\r\n  matching: state.matching,\r\n  width: state.width,\r\n  matching: state.matching,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  shuffleCards: () => dispatch({ type: SHUFFLE }),\r\n  limitCards: () => dispatch({ type: LIMIT_CARDS }),\r\n  duplicateCards: () => dispatch({ type: DUPLICATE_CARDS }),\r\n  resetCards: () => dispatch({ type: RESET_CARDS }),\r\n  flipAllCards: () => dispatch({ type: FLIP_ALL_CARDS }),\r\n  flipCard: (index) => dispatch(flipCard(index)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Grid);\r\n\r\n// ---------------------------------\r\nconst GridContainer = styled.div`\r\n  width: 641px;\r\n  height: 100vh;\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  display:table-cell;\r\n`;\r\n\r\nconst fade = keyframes`\r\n  from {\r\n    opacity:0;\r\n  }\r\n  to {\r\n    opacity:1;\r\n  }\r\n`;\r\n\r\nconst flipHorizontalBottom = keyframes`\r\n  from {\r\n    transform: rotateY(0);\r\n  }\r\n  to {\r\n    transform: rotateY(-360deg);\r\n  }\r\n`;\r\n\r\nconst ImageWrapper = styled.div`\r\n  display: inline-block;\r\n  margin-right: 5px;\r\n  margin-top: 5px;\r\n  width: ${(props) => props.width + \"px\"};\r\n  height: ${(props) => props.width + \"px\"};\r\n  background-color: ${(props) => props.color};\r\n  filter:drop-shadow(0px 0px 1px grey);\r\n  border-radius:3px;\r\n  overflow: hidden;\r\n  animation: ${fade} 0.7s linear;\r\n\r\n  img,\r\n  .blank {\r\n    width: ${(props) => props.width + \"px\"};\r\n    height: ${(props) => props.width + \"px\"};\r\n    padding: 1px;\r\n  }\r\n`;\r\n\r\nconst ImageWrapper2 = styled.div`\r\n  display: inline-block;\r\n  margin-right: 5px;\r\n  margin-top: 5px;\r\n  width: ${(props) => props.width + \"px\"};\r\n  height: ${(props) => props.width + \"px\"};\r\n  background-color: ${(props) => props.color};\r\n  filter:drop-shadow(0px 0px 1px grey);\r\n  border-radius:3px;\r\n  overflow: hidden;\r\n\t-webkit-animation: ${flipHorizontalBottom} 0.7s cubic-bezier(0.455, 0.030, 0.515, 0.955) both;\r\n\t        animation: ${flipHorizontalBottom} 0.7s cubic-bezier(0.455, 0.030, 0.515, 0.955) both;\r\n\r\n  img,\r\n  .blank {\r\n    width: ${(props) => props.width + \"px\"};\r\n    height: ${(props) => props.width + \"px\"};\r\n    padding: 1px;\r\n  }\r\n`;\r\n\r\n\r\nImageWrapper.defaultProps = {\r\n  width: 125,\r\n};\r\n\r\nImageWrapper2.defaultProps = {\r\n  width: 125,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}